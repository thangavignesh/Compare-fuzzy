Perfect example:
http://stackoverflow.com/questions/29066742/watch-file-for-changes-and-run-command-with-powershell
http://gsexdev.blogspot.in/2011/02/creating-inbox-rules-with-ews-managed.html
http://www.independentsoft.de/exchangewebservices/tutorial/getrules.html

$global:counter = @{}

if($global:counter.ContainsKey($key)) {
	$global:counter.Add($key, 1)
} else {
	$global:counter.Set_Item($key, ($global:counter.Get_Item($key) + 1))
}

------ https://rosettacode.org/wiki/Handle_a_signal#PowerShell
------ http://poshcode.org/542

Try
{          
    $AuthorizedUsers = Get-Content \\ FileServer\HRShare\UserList.txt -ErrorAction Stop
}
Catch [System.OutOfMemoryException]
{
    Restart-Computer localhost
}
Catch
{
    $ErrorMessage = $_.Exception.Message
    $FailedItem = $_.Exception.ItemName
    Send-MailMessage -From ExpensesBot@MyCompany.Com -To WinAdmin@MyCompany.Com -Subject "HR File Read Failed!" -SmtpServer EXCH01.AD.MyCompany.Com -Body "We failed to read file $FailedItem. The error message was $ErrorMessage"
    Break
}
Finally
{
    $Time=Get-Date
    "This script made a read attempt at $Time" | out-file c:\logs\ExpensesScript.log -append
}


$registryPath = "HKCU:\Software\ScriptingGuys\Scripts"

$Name = "Version"

$value = "1"

IF(!(Test-Path $registryPath))

  {

    New-Item -Path $registryPath -Force | Out-Null

    New-ItemProperty -Path $registryPath -Name $name -Value $value `

    -PropertyType DWORD -Force | Out-Null}

 ELSE {

    New-ItemProperty -Path $registryPath -Name $name -Value $value `

    -PropertyType DWORD -Force | Out-Null}
    
    
    PS C:\> (Get-ItemProperty -Path HKCU:\Software\ScriptingGuys\Scripts -Name version).version

--------https://support.microsoft.com/en-us/help/137890/how-to-create-a-user-defined-service
--------https://blogs.technet.microsoft.com/heyscriptingguy/2009/11/05/hey-scripting-guy-can-i-start-an-event-based-on-when-a-registry-value-is-changed/
--------https://support.microsoft.com/en-us/help/137890/how-to-create-a-user-defined-service
--------Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
--------https://technet.microsoft.com/en-us/library/cc771551.aspx
--------http://www.computerperformance.co.uk/powershell/powershell_service_wmi_account.htm

ServiceName = 'Serenade'
$arrService = Get-Service -Name $ServiceName

while ($arrService.Status -ne 'Running')
{

    Start-Service $ServiceName
    write-host $arrService.status
    write-host 'Service starting'
    Start-Sleep -seconds 60
    $arrService.Refresh()
    if ($arrService.Status -eq 'Running')
    {
        Write-Host 'Service is now Running'
    }

}
